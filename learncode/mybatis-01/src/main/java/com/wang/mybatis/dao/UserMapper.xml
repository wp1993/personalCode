<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wang.mybatis.dao.UserMapper">
<!--    id对应的dao的方法-->
<!--    resultType:结果类型-->
<!--    parameterType:参数类型-->
    <select id="findUsers" resultType="com.wang.mybatis.pojo.User">
    select * from mybatis.USER
  </select>


    <select id="findUserById" resultType="com.wang.mybatis.pojo.User" parameterType="int">
        select * from USER  where id = #{id}
    </select>


    <insert id="saveUser" parameterType="com.wang.mybatis.pojo.User" >
        insert into user (username, birthday, sex, address) values (#{username},#{birthday},#{sex},#{address})
    </insert>

    <update id="updateUser" parameterType="com.wang.mybatis.pojo.User" >
        update user  set  username = #{username} , birthday = #{birthday} , sex = #{sex} , address = #{address} where id = #{id}
    </update>

    <delete id="deleteUserById" parameterType="int" >
        delete from user where id = #{id}
    </delete>

<!--当parameterType为map时，参数可以通过map传入，更加灵活，例如可以根据自定义的key在sql中使用对应的value-->
    <insert id="saveUserByMap" parameterType="map">
        insert into user (username) values (#{userName})
    </insert>

    <select id="findUsersByLike"  resultType="com.wang.mybatis.pojo.User" >
        select * from user where username like #{value}
    </select>
</mapper>